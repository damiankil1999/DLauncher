/*
 * This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License.
 * http://creativecommons.org/licenses/by-sa/3.0/
 * Authors: Damian Lamers, Fernando van Loenhout
 */
package dlauncher.dialogs;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.Closeable;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.JSONArray;
import org.json.JSONObject;

public class Login extends javax.swing.JDialog {
   private String ClientToken;
   private String AccesToken;
   private JSONArray sss;
   private URL url;

   /**
    * Creates new form Login1
    *
    * @param parent
    * @param modal
    */
   public Login(java.awt.Frame parent, boolean modal) {
      super(parent, modal);
      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jPanel1 = new javax.swing.JPanel();
      jLabel1 = new javax.swing.JLabel();
      jProgressBar1 = new javax.swing.JProgressBar();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

      jPanel1.setBackground(new java.awt.Color(65, 65, 65));

      jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
      jLabel1.setForeground(new java.awt.Color(255, 255, 255));
      jLabel1.setText("Logging in...");

      jProgressBar1.setIndeterminate(true);

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(99, 99, 99)
            .addComponent(jLabel1)
            .addContainerGap(97, Short.MAX_VALUE))
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(43, 43, 43)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );

      pack();
      setLocationRelativeTo(null);
   }// </editor-fold>//GEN-END:initComponents

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the dialog */
      java.awt.EventQueue.invokeLater(new Runnable() {
         @Override
         public void run() {
            Login dialog = new Login(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
               @Override
               public void windowClosing(java.awt.event.WindowEvent e) {
                  System.exit(0);
               }
            });
            dialog.setVisible(true);
         }
      });
   }
   
   public void login_start(String uname, String pword){
      this.login_write(uname, pword);
      try {
         JSONObject response = new JSONObject(this.login_getResponse());
         this.AccesToken = response.getString("accessToken");
         this.ClientToken = response.getString("clientToken");
         
      } catch (IOException ex) {
         Logger.getLogger(Login.class.getName()).log(Level.SEVERE, "", ex);
      }
   }

   private void login_write(String UserName, String Password) {
      Logger.getGlobal().info("Started login process");
      Logger.getGlobal().info("Writing login data..");
      try {
         url = new URL("http://authserver.mojang.com/authenticate");

         final URLConnection con = url.openConnection();
         con.setConnectTimeout(5000);
         con.setReadTimeout(5000);
         con.setDoOutput(true);
         con.setDoInput(true);

         con.setRequestProperty("Content-Type", "application/json");
         try (BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(con.getOutputStream()))) {
            writer.write("{\n"
                    + "  \"agent\": {"
                    + "    \"name\": \"Minecraft\","
                    + "    \"version\": 1"
                    + "\n"
                    + "  },\n"
                    + "  \"username\": \"" + UserName + "\",\n"
                    + "\n"
                    + "  \"password\": \"" + Password + "\",\n"
                    + "}");

            writer.close();
         }
         Logger.getGlobal().info("Succesful written login data");
      } catch (MalformedURLException ex) {
         Logger.getGlobal().warning("Failed Writing login data,");
         Logger.getLogger(Login.class.getName()).log(Level.SEVERE, "", ex);
      } catch (IOException ex) {
         Logger.getGlobal().warning("Failed Writing login data,");
         Logger.getLogger(Login.class.getName()).log(Level.SEVERE, "", ex);
      }
   }

   private String login_getResponse() throws IOException {
      URL website = new URL("http://authserver.mojang.com/authenticate");
      final HttpURLConnection connection = (HttpURLConnection) website.openConnection();
      connection.setReadTimeout(3000);
      try (Closeable c = new Closeable() {
         @Override
         public void close() throws IOException {
            connection.disconnect();
         }
      }) {
         StringBuilder response;
         try (BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))) {
            response = new StringBuilder();
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
               response.append(inputLine);
            }
         }
         return response.toString();
      }
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel jLabel1;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JProgressBar jProgressBar1;
   // End of variables declaration//GEN-END:variables

}
